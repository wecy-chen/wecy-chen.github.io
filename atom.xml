<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>欢迎,欢迎━(*｀∀´*)ノ亻!</title>
  
  
  <link href="https://wecy-chen.github.io/atom.xml" rel="self"/>
  
  <link href="https://wecy-chen.github.io/"/>
  <updated>2022-05-13T03:21:33.024Z</updated>
  <id>https://wecy-chen.github.io/</id>
  
  <author>
    <name>wecyChen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>TypeScript</title>
    <link href="https://wecy-chen.github.io/2022/05/13/ts/"/>
    <id>https://wecy-chen.github.io/2022/05/13/ts/</id>
    <published>2022-05-13T02:46:31.422Z</published>
    <updated>2022-05-13T03:21:33.024Z</updated>
    
    <content type="html"><![CDATA[<!-- 图片路径/image/ts/ --><p><strong>TypeScript学习</strong></p><h1 id="一-文档"><a href="#一-文档" class="headerlink" title="一.文档"></a>一.文档</h1><p>文档说明</p><ol><li> <a href="https://jkchao.github.io/typescript-book-chinese/typings/literals.html">学习地址</a>  </li><li><a href="https://24kcs.github.io/vue3_study/">快速上手</a></li><li><a href="https://www.typescriptlang.org/zh/play?ts=4.1.0-pr-40336-8#code/C4TwDgpgBAggJnAThAziqBeKBtFxECWAdgOYA0URArgLYBGEiAugNwBQAZlUQMbAEB7IlBQRg8JKhQAKAHTyAhohIoAXLATI0ASigBvNlCgB6YyIE1oPAXGgALRhENRrRFAIA2EWR4ElpSira7AC+bKLimlLSAEQAjDEUAEzBQA">代码测试</a></li><li>安装</li></ol><blockquote><p>npm install -g typescript   安装<br>tsc -v     查看版本Version 4.6.4<br>tsc –init  生成tsconfig.json配置文件</p></blockquote><h2 id="二-开始"><a href="#二-开始" class="headerlink" title="二.开始"></a>二.开始</h2><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><blockquote><p>新建ts文件</p></blockquote><p>src/helloworld.ts</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greeter</span> (<span class="params">person</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;Hello, &#x27;</span> + person</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> user = <span class="string">&#x27;Yee&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(greeter(user))</span><br></pre></td></tr></table></figure><p><code>&gt;tsc helloworld.ts</code>  编译<br><code>&gt;node helloworld.js</code> 运行<br><code> hello,Yee</code> 打印</p><blockquote><p>vscode自动编译</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>). 生成配置文件tsconfig.json</span><br><span class="line">    tsc --init</span><br><span class="line"><span class="number">2</span>). 修改tsconfig.json配置</span><br><span class="line">    <span class="string">&quot;outDir&quot;</span>: <span class="string">&quot;./js&quot;</span>,</span><br><span class="line">    <span class="string">&quot;strict&quot;</span>: <span class="literal">false</span>,    </span><br><span class="line"><span class="number">3</span>). 启动监视任务: </span><br><span class="line">    终端 -&gt; 运行任务 -&gt; 监视tsconfig.json</span><br></pre></td></tr></table></figure><p>终端任务重用<br><img src="/image/ts/639_1.png" alt="e273c55cd0693cc35d379d5a6791b045.png"></p><p>处理<br><img src="en-resource://database/641:1" alt="bd5b5fefd0f847a26c54114c8841f692.png"><br>如果还是失败,vscode编辑器要选择默认终端</p><p><a href="https://jkchao.github.io/typescript-book-chinese/project/compilationContext.html#%E5%9F%BA%E7%A1%80">编译选项</a></p><h2 id="基础类型"><a href="#基础类型" class="headerlink" title="基础类型"></a>基础类型</h2><p> &gt; 基本语法<br> <br> <code> let 变量名: 数据类型 = 值</code></p><p> <br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">let</span> a2: number = <span class="number">0b1010</span>  <span class="comment">// 二进制</span></span><br><span class="line"><span class="comment">// 类型包括 :</span></span><br><span class="line"> <span class="comment">// number string undefined boolean object </span></span><br><span class="line"> <span class="comment">// any  任何变量</span></span><br></pre></td></tr></table></figure></p><blockquote><p>数组类型</p></blockquote><p>语法:<br> <code>let 变量名: 数据类型[] = [值1,值2,值3]</code><br>语法:<br> <code>let 变量名: Array&lt;数据类型&gt; = [值1,值2,值3]</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">let</span> arr1: number[] = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>]</span><br><span class="line"><span class="keyword">let</span> arr2: <span class="built_in">Array</span>&lt;number&gt; = [<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>]</span><br></pre></td></tr></table></figure><blockquote><p>枚举类型</p></blockquote><p>枚举里面的每个数据值都可以叫元素,每个元素都有自己的编号,编号是从0开始的,依次的递增加1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  enum Color &#123;</span><br><span class="line">    red = <span class="number">1</span>,</span><br><span class="line">    green,</span><br><span class="line">    blue</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 定义一个Color的枚举类型的变量来接收枚举的值</span></span><br><span class="line">  <span class="keyword">let</span> color: Color = Color.red</span><br><span class="line">  <span class="built_in">console</span>.log(color)  <span class="comment">//1 </span></span><br><span class="line">  <span class="built_in">console</span>.log(Color.red, Color.green, Color.blue) <span class="comment">// 1,2,3</span></span><br><span class="line">  <span class="built_in">console</span>.log(Color[<span class="number">3</span>]) <span class="comment">// &quot;blue&quot; </span></span><br></pre></td></tr></table></figure><blockquote><p>void 类型</p></blockquote><p>在函数声明的时候,小括号的后面使用:void,代表的是该函数没有任何的返回值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">showMsg</span>(<span class="params"></span>): <span class="title">void</span> </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;你好&#x27;</span>)</span><br><span class="line">    <span class="comment">// return</span></span><br><span class="line">    <span class="comment">// return undefined</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span> <span class="comment">//报错</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(showMsg())</span><br></pre></td></tr></table></figure><blockquote><p>object 类型</p></blockquote><p>定义一个函数,参数是object类型,返回值也是object类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getObj</span>(<span class="params">obj: object</span>): <span class="title">object</span> </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(obj)</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;卡卡西&#x27;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="number">27</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(getObj(<span class="built_in">String</span>))</span><br><span class="line">  <span class="comment">//function String() &#123; [native code] &#125; </span></span><br><span class="line">  <span class="comment">// &#123;&quot;name&quot;: &quot;卡卡西&quot;,&quot;age&quot;: 27 &#125; </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>联合类型，类型断言，类型推断</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">类型断言(Type Assertion): 可以用来手动指定一个值的类型</span></span><br><span class="line"><span class="comment">语法:</span></span><br><span class="line"><span class="comment">    方式一: &lt;类型&gt;值</span></span><br><span class="line"><span class="comment">    方式二: 值 as 类型  tsx中只能用这种方式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/* 需求: 定义一个函数得到一个字符串或者数值数据的长度 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getLength</span>(<span class="params">x: number | string</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ((x <span class="keyword">as</span> string).length) &#123;</span><br><span class="line">    <span class="keyword">return</span> (x <span class="keyword">as</span> string).length</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x.toString().length</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(getLength(<span class="string">&#x27;abcd&#x27;</span>), getLength(<span class="number">1234</span>))</span><br></pre></td></tr></table></figure><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>接口是对象的状态(属性)和行为(方法)的抽象(描述)<br>接口:是一种类型,是一种规范,是一种规则,是一个能力,是一种约束</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 需求: 创建人的对象, 需要对人的属性进行一定的约束</span></span><br><span class="line">  <span class="comment">// id是number类型, 必须有, 只读的</span></span><br><span class="line">  <span class="comment">// name是string类型, 必须有</span></span><br><span class="line">  <span class="comment">// age是number类型, 必须有</span></span><br><span class="line">  <span class="comment">// sex是string类型, 可以没有</span></span><br><span class="line">  <span class="comment">// 定义一个接口,该接口作为person对象的类型使用,限定或者是约束该对象中的属性数据</span></span><br><span class="line">  interface IPerson &#123;</span><br><span class="line">    <span class="comment">// readonly id是只读的,是number类型,const修饰属性,想要设置该属性是只读的,是不能使用的</span></span><br><span class="line">    readonly id:  number</span><br><span class="line">    <span class="attr">name</span>: string</span><br><span class="line">    <span class="attr">age</span>: number</span><br><span class="line">    <span class="comment">// ? 可有可无的</span></span><br><span class="line">    sex?: string</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 定义一个对象,该对象的类型就是我定义的接口IPerson</span></span><br><span class="line">  <span class="keyword">const</span> person: IPerson = &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;小甜甜&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="comment">// sex这个属性没有也是可以的</span></span><br><span class="line">    <span class="comment">// sex: &#x27;女&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(person)</span><br><span class="line">  <span class="comment">// id属性此时是可读可写</span></span><br><span class="line">  <span class="comment">// person.id = 100</span></span><br><span class="line">  person.sex=<span class="string">&#x27;女&#x27;</span></span><br><span class="line">  <span class="comment">// person.money = &#x27;123131&#x27;</span></span><br><span class="line">  <span class="built_in">console</span>.log(person)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">TypeScript学习</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>文章标题教程</title>
    <link href="https://wecy-chen.github.io/2022/03/19/article/"/>
    <id>https://wecy-chen.github.io/2022/03/19/article/</id>
    <published>2022-03-19T01:56:17.922Z</published>
    <updated>2021-11-16T23:05:06.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:【必需】页面标题</span><br><span class="line">date:【必需】页面创建日期</span><br><span class="line">type: 【必需】标籤、分类和友情链接三个页面需要配置</span><br><span class="line">updated:【可选】页面更新日期</span><br><span class="line">description:【可选】页面描述</span><br><span class="line">keywords: 【可选】页面关键字</span><br><span class="line">comments: 【可选】显示页面评论模块 (默认 true)</span><br><span class="line">top_img: 【可选】页面顶部图片</span><br><span class="line">mathjax: 【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</span><br><span class="line">katex: 【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</span><br><span class="line">aside: 【可选】显示侧边栏 (默认 true)</span><br><span class="line">aplayer: 【可选】在需要的页面加载 aplayer 的 js 和 css, 请参考文章下面的音乐 配置</span><br><span class="line">highlight_shrink: 【可选】配置代码框是否展开 (true/false)(默认为设置中 highlight_shrink 的配置)</span><br><span class="line">cover: 文章顶部图片</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">页面描述</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wecy-chen.github.io/2022/03/19/hello-world/"/>
    <id>https://wecy-chen.github.io/2022/03/19/hello-world/</id>
    <published>2022-03-19T01:54:42.201Z</published>
    <updated>2022-03-19T01:56:17.923Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.<br>欢迎来到<a href="https://hexo.io/">Hexo</a>! 这是你的第一篇文章。检查<a href="https://hexo.io/docs/">文件</a>更多信息。如果您在使用Hexo时遇到任何问题，可以在[故障排除]中找到答案(<a href="https://hexo.io/docs/troubleshooting.html)%E6%88%96%E8%80%85%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%9C%A8[GitHub]%E4%B8%8A%E9%97%AE%E6%88%91(https://github.com/hexojs/hexo/issues)">https://hexo.io/docs/troubleshooting.html)或者你可以在[GitHub]上问我(https://github.com/hexojs/hexo/issues)</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>对接支付宝沙箱之PC网页支付</title>
    <link href="https://wecy-chen.github.io/2021/12/08/zhifubaoPC/"/>
    <id>https://wecy-chen.github.io/2021/12/08/zhifubaoPC/</id>
    <published>2021-12-08T01:26:42.000Z</published>
    <updated>2022-03-19T01:56:17.923Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-申请开发"><a href="#一-申请开发" class="headerlink" title="*一. 申请开发??"></a>*<em>一. 申请开发?</em>?</h2><p>访问开发者中心<a href="https://links.jianshu.com/go?to=https://openhome.alipay.com/platform/appDaily.htm?tab=info">https://openhome.alipay.com/platform/appDaily.htm?tab=info</a></p><p>进行认证后(真实姓名,绑定手机号和邮箱), 即可进入沙箱配置页</p><p><img src="/image/zhifubaoPC/a43f57e84f55a6f0a29727736934b9a6.png" alt="a43f57e84f55a6f0a29727736934b9a6.png"></p><h2 id="二-配置密钥"><a href="#二-配置密钥" class="headerlink" title="二. 配置密钥"></a><strong>二. 配置密钥</strong></h2><h3 id="1-下载密钥生成工具"><a href="#1-下载密钥生成工具" class="headerlink" title="1. 下载密钥生成工具"></a><strong>1. 下载密钥生成工具</strong></h3><p>访问 <a href="https://links.jianshu.com/go?to=https://docs.open.alipay.com/291/105971">https://docs.open.alipay.com/291/105971</a></p><p><img src="/image/zhifubaoPC/1f8481f58db077b46c576d3f9e2f332c.png" alt="1f8481f58db077b46c576d3f9e2f332c.png"></p><p>下载AlipayDevelopmentAssistant-1.0.7.exe (支付宝开发平台开发助手)密钥工具 大约100多M 正常安装</p><h3 id="2-使用工具生成公钥私钥"><a href="#2-使用工具生成公钥私钥" class="headerlink" title="2.使用工具生成公钥私钥"></a><strong>2.使用工具生成公钥私钥</strong></h3><p><strong><img src="/image/zhifubaoPC/c6f845df84f5cbcac6dce6cb485cb38b.png" alt="c6f845df84f5cbcac6dce6cb485cb38b.png"></strong></p><h3 id="3-设置公钥"><a href="#3-设置公钥" class="headerlink" title="3.设置公钥"></a><strong>3.设置公钥</strong></h3><p>加签方式选择<strong>公钥</strong></p><p><strong><img src="/image/zhifubaoPC/51e1ae5878ebc514b824d38f660fa219.png" alt="51e1ae5878ebc514b824d38f660fa219.png"></strong></p><p>保存公钥,退款需要用到</p><h2 id="三-NodeJS请求支付接口-koa"><a href="#三-NodeJS请求支付接口-koa" class="headerlink" title="三. NodeJS请求支付接口(koa)"></a><strong>三. NodeJS请求支付接口(koa)</strong></h2><p>1.保存私钥</p><p>新建app_private_key.pem文件</p><p><img src="/image/zhifubaoPC/84b01a06d3bab3d55e11b7776901ce77.png" alt="84b01a06d3bab3d55e11b7776901ce77.png"></p><p>2.实现代码</p><p>支付参数</p><p><a href="https://opendocs.alipay.com/apis/api_1/alipay.trade.page.pay">https://opendocs.alipay.com/apis/api_1/alipay.trade.page.pay</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">&#x27;moment&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; nginx &#125; = MAPP.proConfig</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; app_private_key &#125; = MAPP.keys<span class="comment">// 支付宝私钥</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">get</span>: &#123;</span><br><span class="line">    <span class="comment">// 创建支付宝支付连接</span></span><br><span class="line">    <span class="string">&#x27;/test/alipay&#x27;</span>: [</span><br><span class="line">      <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">        <span class="comment">// 支付参数</span></span><br><span class="line">        <span class="comment">// 注意:本地测试回调需要配置ngrok</span></span><br><span class="line">        <span class="keyword">const</span> paramsMap = &#123;</span><br><span class="line">          <span class="attr">app_id</span>: <span class="string">&#x27;2021000118654583&#x27;</span>, <span class="comment">// 应用id</span></span><br><span class="line">          <span class="attr">method</span>: <span class="string">&#x27;alipay.trade.page.pay&#x27;</span>, <span class="comment">// 调起类型(app,page,wap)</span></span><br><span class="line">          <span class="attr">format</span>: <span class="string">&#x27;JSON&#x27;</span>,</span><br><span class="line">          <span class="attr">charset</span>: <span class="string">&#x27;utf-8&#x27;</span>,</span><br><span class="line">          <span class="attr">sign_type</span>: <span class="string">&#x27;RSA2&#x27;</span>,</span><br><span class="line">          <span class="attr">timestamp</span>: moment().format(<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>),</span><br><span class="line">          <span class="attr">version</span>: <span class="string">&#x27;1.0&#x27;</span>,</span><br><span class="line">          <span class="attr">notify_url</span>: <span class="string">`https://<span class="subst">$&#123;nginx.server_name&#125;</span>/api-universal/test/aliay/callback`</span>, <span class="comment">// 接口回调(配置ngrok映射https地址)</span></span><br><span class="line">          <span class="comment">// return_url: &#x27;https://b2c-app-dev.fenxiangqu.cn/pages/my/index&#x27;,// 前台跳转页面</span></span><br><span class="line">          <span class="attr">biz_content</span>: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">            <span class="attr">product_code</span>: <span class="string">&#x27;FAST_INSTANT_TRADE_PAY&#x27;</span>, <span class="comment">// 商品码</span></span><br><span class="line">            <span class="attr">body</span>: <span class="string">&#x27;订单回调内容&#x27;</span>, <span class="comment">// 订单附加信息。</span></span><br><span class="line">            <span class="attr">subject</span>: <span class="string">&#x27;测试支付宝PC支付&#x27;</span>, <span class="comment">// 交易标题</span></span><br><span class="line">            <span class="attr">out_trade_no</span>: <span class="string">&#x27;1624678209672759&#x27;</span>, <span class="comment">// 订单编号</span></span><br><span class="line">            <span class="attr">total_amount</span>: <span class="number">0.01</span> <span class="comment">// 支付金额</span></span><br><span class="line">          &#125;) <span class="comment">// 订单支付参数</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 拼接参数</span></span><br><span class="line">        <span class="keyword">let</span> objParams = <span class="built_in">Object</span>.keys(paramsMap)</span><br><span class="line">          .sort()</span><br><span class="line">          .map(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> key + <span class="string">&#x27;=&#x27;</span> + paramsMap[key]</span><br><span class="line">          &#125;)</span><br><span class="line">          .join(<span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">        <span class="keyword">let</span> encodeParams = <span class="built_in">Object</span>.keys(paramsMap)</span><br><span class="line">          .sort()</span><br><span class="line">          .map(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> key + <span class="string">&#x27;=&#x27;</span> + <span class="built_in">encodeURIComponent</span>(paramsMap[key])</span><br><span class="line">          &#125;)</span><br><span class="line">          .join(<span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">        <span class="comment">// RSA2加密签名</span></span><br><span class="line">        <span class="keyword">let</span> sign</span><br><span class="line">        <span class="keyword">let</span> signInit = crypto.createSign(<span class="string">&#x27;RSA-SHA256&#x27;</span>)</span><br><span class="line">        signInit.update(objParams, <span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">        <span class="comment">// 支付宝私钥签名</span></span><br><span class="line">        <span class="comment">// console.log(app_private_key)</span></span><br><span class="line">        sign = signInit.sign(app_private_key, <span class="string">&#x27;base64&#x27;</span>)</span><br><span class="line">        <span class="keyword">let</span> params = encodeParams + <span class="string">&#x27;&amp;sign=&#x27;</span> + <span class="built_in">encodeURIComponent</span>(sign)</span><br><span class="line">        <span class="comment">// https://openapi.alipaydev.com/gateway.do 沙漏环境</span></span><br><span class="line">        <span class="comment">// https://openapi.alipay.com/gateway.do 正式环境</span></span><br><span class="line">        <span class="keyword">const</span> url = <span class="string">`https://openapi.alipaydev.com/gateway.do?<span class="subst">$&#123;params&#125;</span>`</span></span><br><span class="line">        ctx.info(&#123; <span class="attr">message</span>: <span class="string">&#x27;创建支付参数成功&#x27;</span>, <span class="attr">data</span>: &#123; url &#125; &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">userAuth</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">post</span>: &#123;</span><br><span class="line">    <span class="comment">// 支付宝回调</span></span><br><span class="line">    <span class="string">&#x27;/test/alipay/callback&#x27;</span>: [<span class="keyword">async</span> ctx =&gt; &#123; &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">userAuth</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.支付信息链接</p><p><img src="/image/zhifubaoPC/409fe8b92de6a90b63cef300de9b23c3.png" alt="409fe8b92de6a90b63cef300de9b23c3.png"></p><p>4.支付界面</p><p> 前台支付界面 <a href="https://opendocs.alipay.com/open/270/01arn8">https://opendocs.alipay.com/open/270/01arn8</a></p><p><img src="/image/zhifubaoPC/0d1453f969811cbc5c3e46dcd98e642d.png" alt="0d1453f969811cbc5c3e46dcd98e642d.png"></p><p>注意:</p><h1 id="显示-码已失效，请刷新二维码后重试"><a href="#显示-码已失效，请刷新二维码后重试" class="headerlink" title="显示:码已失效，请刷新二维码后重试"></a><strong>显示:码已失效，请刷新二维码后重试</strong></h1><p>解决办法: 就是使用沙箱版本的支付宝APP扫描或者使用沙箱版本的支付宝账号密码登录付款即可。</p><p>打开开放平台, 沙箱工具中下载沙漏版钱包</p><p><a href="https://open.alipay.com/platform/appDaily.htm?tab=tool">https://open.alipay.com/platform/appDaily.htm?tab=tool</a></p>]]></content>
    
    
    <summary type="html">支付宝接口开发</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo</title>
    <link href="https://wecy-chen.github.io/2021/11/17/hexo/"/>
    <id>https://wecy-chen.github.io/2021/11/17/hexo/</id>
    <published>2021-11-17T07:03:57.000Z</published>
    <updated>2022-03-19T01:56:17.923Z</updated>
    
    <content type="html"><![CDATA[<p>hexo教程</p><p>官网 <a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><p><strong>1. 安装node</strong><br><a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p><p>$ node -v<br>v14.17.0</p><p>$ npm -v<br>6.14.13</p><p><strong>2. 全局安装脚手架</strong><br>npm install -g hexo-cli</p><p><strong>3. 安装依赖包</strong><br>npm install hexo</p><p><strong>4. 主题</strong><br>下载主题 到themes文件内<br>npm i hexo-theme-butterfly<br>或者<br>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes/butterfly</p><p>修改_config.yml 布局配置主题文件<br>主题配置教程<br><a href="https://www.jianshu.com/p/50a565adaf15?ivk_sa=1024320u">https://www.jianshu.com/p/50a565adaf15?ivk_sa=1024320u</a></p><p>换主题,调整清除缓存<br>hexo clean</p><p>主题报错处理</p><p><a href="https://zhuanlan.zhihu.com/p/137946156">https://zhuanlan.zhihu.com/p/137946156</a></p><p><strong>5. 部署</strong><br>配置预览部署路径<br>npm install hexo-deployer-git –save<br>_config.yml<br>deploy:<br>  type: git<br>  repository: <a href="mailto:&#103;&#105;&#116;&#x40;&#103;&#105;&#116;&#x68;&#117;&#x62;&#46;&#99;&#111;&#x6d;">&#103;&#105;&#116;&#x40;&#103;&#105;&#116;&#x68;&#117;&#x62;&#46;&#99;&#111;&#x6d;</a>:wecy-chen/wecy-chen.github.io.git<br>  branch: master</p><blockquote><p>hexo d</p><ol><li>hexo g 编译文件</li><li>hexo server  创建本地服务器 <a href="http://localhost:4000/">http://localhost:4000/</a></li><li>hexo d 发布线上预览地址</li></ol></blockquote>]]></content>
    
    
    <summary type="html">这是一个hexo博客的</summary>
    
    
    
    
    <category term="教程" scheme="https://wecy-chen.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>印象笔记导出md文件</title>
    <link href="https://wecy-chen.github.io/2021/11/01/yinxiangbiji/"/>
    <id>https://wecy-chen.github.io/2021/11/01/yinxiangbiji/</id>
    <published>2021-11-01T01:26:42.000Z</published>
    <updated>2022-03-19T01:56:17.923Z</updated>
    
    <content type="html"><![CDATA[<!-- # 印象笔记导出md文件 --><p>印象笔记导出md文件</p><p>地址:<br><a href="https://github.com/wormi4ok/evernote2md">https://github.com/wormi4ok/evernote2md</a></p><p>插件地址 </p><p>印象笔记导出md文件方法</p><ul><li><strong>1.先导出格式</strong></li></ul><p>            enex格式</p><p><img src="/image/yinxiang/download.png" alt="downlaod.png"></p><ul><li><strong>2.使用导出工具(按平台使用环境)</strong></li></ul><p>github <a href="https://github.com/wormi4ok/evernote2md">https://github.com/wormi4ok/evernote2md</a></p><p>下载地址: <a href="https://github.com/wormi4ok/evernote2md/releases/tag/v0.17.1">https://github.com/wormi4ok/evernote2md/releases/tag/v0.17.1</a></p><p><img src="/image/yinxiang/save.png" alt="save.png"></p><ul><li><strong>3.windows环境下的使用方法</strong></li></ul><p>把evernote2md.exe拖拽到终端控制台,然后空格,拖拽要目标enex文件,转化成功导出md文件</p><p>命令: 自动导出目标文件</p><p>$ /d/Desktop/印象笔记导出/evernote2md.exe /d/Desktop/印象笔记导出/YinXiangBiJi.enex</p>]]></content>
    
    
    <summary type="html">印象笔记导出md文件</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>代码片段</title>
    <link href="https://wecy-chen.github.io/2018/07/31/core/"/>
    <id>https://wecy-chen.github.io/2018/07/31/core/</id>
    <published>2018-07-30T23:04:35.000Z</published>
    <updated>2022-03-19T01:56:17.922Z</updated>
    
    <content type="html"><![CDATA[<h1 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一种方法  </span></span><br><span class="line"><span class="built_in">Array</span>.prototype.unique = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">//在原型上加方法</span></span><br><span class="line"> <span class="keyword">var</span> res = [];</span><br><span class="line"> <span class="keyword">var</span> json = &#123;&#125;;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.length; i++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(!json[<span class="built_in">this</span>[i]])&#123; <span class="comment">//是否存在</span></span><br><span class="line">   res.push(<span class="built_in">this</span>[i]);</span><br><span class="line">   json[<span class="built_in">this</span>[i]] = <span class="number">1</span>; <span class="comment">//保存了</span></span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">112</span>,<span class="number">112</span>,<span class="number">34</span>,<span class="string">&#x27;你好&#x27;</span>,<span class="number">112</span>,<span class="number">112</span>,<span class="number">34</span>,<span class="string">&#x27;你好&#x27;</span>,<span class="string">&#x27;str&#x27;</span>,<span class="string">&#x27;str1&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr.unique())  <span class="comment">//[112, 34, &quot;你好&quot;, &quot;str&quot;, &quot;str1&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.</span></span><br><span class="line"><span class="comment">//判断是否第一个index,返回第一出现的值</span></span><br><span class="line"><span class="keyword">let</span> uniqueArr=arr.filter(<span class="function">(<span class="params">item,index,arr</span>)=&gt;</span>arr.indexOf(item)==index)</span><br><span class="line"><span class="built_in">console</span>.log(uniqueArr) <span class="comment">//[112, 34, &quot;你好&quot;, &quot;str&quot;, &quot;str1&quot;]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//3.es6 Set方法</span></span><br><span class="line"><span class="keyword">let</span> a =[...new <span class="built_in">Set</span>(arr)]</span><br><span class="line"><span class="built_in">console</span>.log(a) <span class="comment">//[112, 34, &quot;你好&quot;, &quot;str&quot;, &quot;str1&quot;]</span></span><br></pre></td></tr></table></figure><h1 id="防抖与节流"><a href="#防抖与节流" class="headerlink" title="防抖与节流"></a>防抖与节流</h1><p><a href="https://mp.weixin.qq.com/s/Vkshf-nEDwo2ODUJhxgzVA">JS的防抖与节流</a></p><p><strong>防抖</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">fn, wait</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> timeout = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(timeout !== <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(timeout)</span><br><span class="line">        &#125;</span><br><span class="line">      timeout = <span class="built_in">setTimeout</span>(fn, wait)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 处理函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.random()); </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 滚动事件</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>, debounce(handle, <span class="number">1000</span>));</span><br></pre></td></tr></table></figure><p><strong>节流</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//节流</span></span><br><span class="line"><span class="keyword">var</span> throttle = <span class="function"><span class="keyword">function</span>(<span class="params">func, delay</span>) </span>&#123;</span><br><span class="line">     <span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line">     <span class="keyword">var</span> startTime = <span class="built_in">Date</span>.now();</span><br><span class="line">     <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">             <span class="keyword">var</span> curTime = <span class="built_in">Date</span>.now();</span><br><span class="line">             <span class="keyword">var</span> remaining = delay - (curTime - startTime);</span><br><span class="line">             <span class="keyword">var</span> context = <span class="built_in">this</span>;</span><br><span class="line">             <span class="keyword">var</span> args = <span class="built_in">arguments</span>;</span><br><span class="line">             <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">              <span class="keyword">if</span> (remaining &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    func.apply(context, args);</span><br><span class="line">                    startTime = <span class="built_in">Date</span>.now();</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123; <span class="comment">// 超1s多出时间执行</span></span><br><span class="line">                    timer = <span class="built_in">setTimeout</span>(func, remaining);</span><br><span class="line">              &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">Math</span>.random());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当第一次触发事件时马上执行事件处理函数，最后一次触发事件后也还会执行一次事件处理函数</span></span><br><span class="line"> <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>, throttle(handle, <span class="number">3000</span>));</span><br></pre></td></tr></table></figure><h1 id="多级数组变一级-扁平"><a href="#多级数组变一级-扁平" class="headerlink" title="多级数组变一级(扁平)"></a>多级数组变一级(扁平)</h1> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,[<span class="string">&#x27;a&#x27;</span>,<span class="number">55</span>,[<span class="number">111</span>,&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&#x27;bbb&#x27;</span>&#125;]]]</span><br><span class="line">    <span class="keyword">var</span> empty=[]</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">flat</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">      arr.forEach(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> item===<span class="string">&#x27;string&#x27;</span> || <span class="keyword">typeof</span> item===<span class="string">&#x27;number&#x27;</span>)&#123;</span><br><span class="line">          empty.push(item)</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">Array</span>.isArray(item))&#123;  </span><br><span class="line">        <span class="comment">//判断数组 1.typeof item ===&#x27;object&#x27; &amp;&amp;item instanceof Array</span></span><br><span class="line">        <span class="comment">// 2. Object.prototype.toString.call(item)===&#x27;[object Array]&#x27;</span></span><br><span class="line">          flat(item) </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          empty.push(item)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> empty</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(flat(arr)) <span class="comment">// [1, 2, 3, 4, &quot;a&quot;, 55, 111, &#123;&quot;name&quot;:&#x27;bbb&#x27;&#125;]</span></span><br></pre></td></tr></table></figure><h1 id="千分符"><a href="#千分符" class="headerlink" title="千分符"></a>千分符</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;3562123761&quot;</span>;<span class="comment">//[3,562,123,761]</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> iNum=str.length%<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> prev=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> arr=[];</span><br><span class="line">    <span class="keyword">var</span> iNow=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> tmp=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(iNum !=<span class="number">0</span>)&#123; <span class="comment">//不是三的整除,先放在数组</span></span><br><span class="line">        prev =str.substring(<span class="number">0</span>,iNum);</span><br><span class="line">        arr.push(prev)</span><br><span class="line">    &#125;</span><br><span class="line">    str =str.substring(iNum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;str.length;i++)&#123;</span><br><span class="line">        iNow++;</span><br><span class="line">        tmp+=str[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(iNow==<span class="number">3</span>&amp;&amp;tmp)&#123;</span><br><span class="line">            arr.push(tmp) <span class="comment">//三个数字一组</span></span><br><span class="line">            tmp=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            iNow=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//console.log(arr)</span></span><br><span class="line">    <span class="keyword">return</span> arr.join(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(test(str));</span><br><span class="line"></span><br><span class="line"><span class="comment">//正则</span></span><br><span class="line"><span class="comment">//(?=)前项声明</span></span><br><span class="line"><span class="comment">//(?!)反前向声明</span></span><br><span class="line"><span class="comment">//例子</span></span><br><span class="line"><span class="keyword">var</span> str1=<span class="string">&#x27;abacad&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> re=<span class="regexp">/a(?=b)/g</span></span><br><span class="line">str1=str1.replace(re,<span class="string">&quot;*&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str1);<span class="comment">//*bacad</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> re2=<span class="regexp">/a(?!b)/g</span></span><br><span class="line"><span class="keyword">var</span> str2=str1.replace(re2,<span class="string">&quot;*&quot;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(str2);<span class="comment">//*b*c*d</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test2</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> re=<span class="regexp">/(?=(?!\b)(\d&#123;3&#125;)+$)/g</span>; <span class="comment">//边界不能替换</span></span><br><span class="line">    <span class="keyword">return</span> str.replace(re,<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(test2(str));<span class="comment">//3,562,123,761</span></span><br></pre></td></tr></table></figure><h1 id="驼峰命名法"><a href="#驼峰命名法" class="headerlink" title="驼峰命名法"></a>驼峰命名法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;border-bottom-color&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr=str.split(<span class="string">&quot;-&quot;</span>);<span class="comment">//[border,bottom,color]</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">        arr[i]=arr[i].charAt(<span class="number">0</span>).toUpperCase()+arr[i].substring(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr.join(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(test(str));<span class="comment">//borderBottomColor</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.正则</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test2</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> re=<span class="regexp">/-(\w)/g</span>;</span><br><span class="line">    <span class="keyword">return</span> str.replace(re,<span class="function"><span class="keyword">function</span>(<span class="params">$<span class="number">0</span>,$<span class="number">1</span></span>)</span>&#123; <span class="comment">//-b b</span></span><br><span class="line">        <span class="keyword">return</span> $<span class="number">1.</span>toUpperCase()</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(test2(str));<span class="comment">//borderBottomColor</span></span><br></pre></td></tr></table></figure><h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><p><a href="https://segmentfault.com/a/1190000015347051#articleHeader0">Javascript常见排序算法的笔记</a></p><p><strong>从小到大排序</strong></p><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">15</span>, <span class="number">55</span>, <span class="number">99</span>, <span class="number">77</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">2</span>]</span><br><span class="line"><span class="keyword">let</span> time = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbleSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> len = arr.length</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">            time++</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">var</span> temp</span><br><span class="line">                temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>]</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(time) <span class="comment">//21</span></span><br><span class="line"><span class="built_in">console</span>.log(bubbleSort(arr)) <span class="comment">//[0, 2, 8, 15, 55, 77, 99]</span></span><br></pre></td></tr></table></figure><h2 id="二分法排序"><a href="#二分法排序" class="headerlink" title="二分法排序"></a>二分法排序</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Arr = [<span class="number">85</span>, <span class="number">24</span>, <span class="number">63</span>, <span class="number">45</span>, <span class="number">17</span>, <span class="number">31</span>, <span class="number">96</span>, <span class="number">50</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quickSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (arr.length &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> pivotIndex = <span class="built_in">Math</span>.floor(arr.length / <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">let</span> pivot = arr.splice(pivotIndex, <span class="number">1</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">let</span> left = [];</span><br><span class="line">    <span class="keyword">let</span> right = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] &lt; pivot) &#123;</span><br><span class="line">            left.push(arr[i]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            right.push(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 递归</span></span><br><span class="line">    <span class="keyword">return</span> quickSort(left).concat([pivot], quickSort(right));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(quickSort(Arr));<span class="comment">//[17, 24, 31, 45, 50, 63, 85, 96]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="添加class"><a href="#添加class" class="headerlink" title="添加class"></a>添加class</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addClass</span>(<span class="params">el, className</span>) </span>&#123; <span class="comment">//加class</span></span><br><span class="line">   <span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;(^|\\s)&#x27;</span> + className + <span class="string">&#x27;(\\s|$)&#x27;</span>) <span class="comment">//&quot;className&quot; 或者 “   className     ”</span></span><br><span class="line">   <span class="keyword">if</span> (reg.test(el.className)) &#123; <span class="comment">//判断是否有class</span></span><br><span class="line">     <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//加上class名</span></span><br><span class="line">   <span class="keyword">let</span> newClass = el.className.split(<span class="string">&#x27; &#x27;</span>)  <span class="comment">//拆分</span></span><br><span class="line">   newClass.push(className) <span class="comment">//添加</span></span><br><span class="line">   el.className = newClass.join(<span class="string">&#x27; &#x27;</span>) <span class="comment">//字符串</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="设置data节点属性"><a href="#设置data节点属性" class="headerlink" title="设置data节点属性"></a>设置data节点属性</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params">el, name, val</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> prefix = <span class="string">&#x27;data-&#x27;</span></span><br><span class="line">  <span class="keyword">if</span> (val) &#123;  </span><br><span class="line">    <span class="keyword">return</span> el.setAttribute(prefix + name, val)  <span class="comment">//设置</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> el.getAttribute(prefix + name)  <span class="comment">//获取</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="浏览器css前缀的兼容"><a href="#浏览器css前缀的兼容" class="headerlink" title="浏览器css前缀的兼容"></a>浏览器css前缀的兼容</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置浏览器的兼容</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">prefixStyle</span>(<span class="params">style</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> elementStyle = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>).style</span><br><span class="line">    <span class="comment">//供应商</span></span><br><span class="line">    <span class="keyword">let</span> vendor = (<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> transformNames = &#123;</span><br><span class="line">            <span class="attr">webkit</span>: <span class="string">&#x27;webkitTransform&#x27;</span>,</span><br><span class="line">            <span class="attr">Moz</span>: <span class="string">&#x27;MozTransform&#x27;</span>,</span><br><span class="line">            <span class="attr">O</span>: <span class="string">&#x27;OTransform&#x27;</span>,</span><br><span class="line">            <span class="attr">ms</span>: <span class="string">&#x27;msTransform&#x27;</span>,</span><br><span class="line">            <span class="attr">standard</span>: <span class="string">&#x27;transform&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> transformNames) &#123;</span><br><span class="line">            <span class="keyword">if</span> (elementStyle[transformNames[key]] !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> key <span class="comment">//返回前缀</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;)()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (vendor === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (vendor === <span class="string">&#x27;standard&#x27;</span>) &#123; <span class="comment">//标准,没有前缀</span></span><br><span class="line">        <span class="keyword">return</span> style</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> vendor + style.charAt(<span class="number">0</span>).toUpperCase() + style.substr(<span class="number">1</span>) <span class="comment">//驼峰命名</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试</span></span><br><span class="line">alert(prefixStyle(<span class="string">&#x27;transform&#x27;</span>))<span class="comment">// webkitTransform  (谷歌浏览器 webkit内核)</span></span><br></pre></td></tr></table></figure><h1 id="获取DOM大小和位置"><a href="#获取DOM大小和位置" class="headerlink" title="获取DOM大小和位置"></a>获取DOM大小和位置</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRect</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (el <span class="keyword">instanceof</span> <span class="built_in">window</span>.SVGElement) &#123;</span><br><span class="line">    <span class="keyword">let</span> rect = el.getBoundingClientRect()</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">top</span>: rect.top,</span><br><span class="line">      <span class="attr">left</span>: rect.left,</span><br><span class="line">      <span class="attr">width</span>: rect.width,</span><br><span class="line">      <span class="attr">height</span>: rect.height</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">top</span>: el.offsetTop,</span><br><span class="line">      <span class="attr">left</span>: el.offsetLeft,</span><br><span class="line">      <span class="attr">width</span>: el.offsetWidth,</span><br><span class="line">      <span class="attr">height</span>: el.offsetHeight</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1><h2 id="hasOwnProperty-NaN"><a href="#hasOwnProperty-NaN" class="headerlink" title="hasOwnProperty"></a>hasOwnProperty</h2><p>  对象本身的属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Foo</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.name=name</span><br><span class="line">&#125;</span><br><span class="line">Foo.prototype.alertName=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  alert(<span class="built_in">this</span>.name)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建示例</span></span><br><span class="line"><span class="keyword">var</span> f = <span class="keyword">new</span> Foo(<span class="string">&#x27;小明&#x27;</span>)</span><br><span class="line">f.printName=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">this</span>.name)   <span class="comment">//小明</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试</span></span><br><span class="line">f.printName() </span><br><span class="line">f.alertName()</span><br><span class="line">f.toString() <span class="comment">//要去f.__proto__.__proto__中查找</span></span><br><span class="line"><span class="keyword">var</span> item </span><br><span class="line"><span class="keyword">for</span>(item <span class="keyword">in</span> f)&#123;</span><br><span class="line">  <span class="comment">//高级浏览器已经在 for in 中 屏蔽了来自原型的属性</span></span><br><span class="line">  <span class="comment">//但是这里还是建议大家还是加上这个判断,保证程序的健壮性</span></span><br><span class="line">  <span class="keyword">if</span>(f.hasOwnProperty(item))&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item)  <span class="comment">// name printName</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h2><p><img src="%E5%8E%9F%E5%9E%8B%E9%93%BE.jpg" alt="原型链"></p><p> <strong>instanceof</strong><br>用于判断<code>引用类型</code>属于哪个<code>构造函数</code>的方法</p><ul><li>f instanceof 的判断逻辑是:</li></ul><ol><li>f的__proto__一层一层往上,能否找打对应到Foo.prototype</li><li>再试判断f instanceof Object</li></ol><h2 id="instanceof"><a href="#instanceof" class="headerlink" title="instanceof"></a>instanceof</h2><p>变量 属于 数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[]</span><br><span class="line">arr <span class="keyword">instanceof</span> <span class="built_in">Array</span> <span class="comment">//true</span></span><br><span class="line"><span class="keyword">typeof</span> arr <span class="comment">//object, typeof 是无法判断是否是数组的</span></span><br></pre></td></tr></table></figure><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>DOM操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Elem</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.elem = <span class="built_in">document</span>.getElementById(id)</span><br><span class="line">&#125;</span><br><span class="line">Elem.prototype.html = <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123; <span class="comment">//设置/获取innerHTML</span></span><br><span class="line">    <span class="keyword">var</span> elem = <span class="built_in">this</span>.elem</span><br><span class="line">    <span class="keyword">if</span> (val) &#123;</span><br><span class="line">        elem.innerHTML = val</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span> <span class="comment">//链式操作</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> elem.innerHTML</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Elem.prototype.on = <span class="function"><span class="keyword">function</span>(<span class="params">type,fn</span>) </span>&#123; <span class="comment">//绑定事件</span></span><br><span class="line">  <span class="keyword">var</span> elem=<span class="built_in">this</span>.elem</span><br><span class="line">  elem.addEventListener(type,fn)</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> div1 = <span class="keyword">new</span> Elem(<span class="string">&#x27;div1&#x27;</span>) <span class="comment">//获取设置id类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//console.log(div1.html()) //innerHTML</span></span><br><span class="line">div1.html(<span class="string">&quot;&lt;p&gt;hello world&lt;/p&gt;&quot;</span>).on(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  alert(<span class="string">&#x27;clicked&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="深层拷贝"><a href="#深层拷贝" class="headerlink" title="深层拷贝"></a>深层拷贝</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepClone</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> newObj=obj <span class="keyword">instanceof</span> <span class="built_in">Array</span> ? []:&#123;&#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;</span><br><span class="line">    newObj[key]= <span class="keyword">typeof</span> obj[key]===<span class="string">&#x27;object&#x27;</span>? deepClone(obj[key]):obj[key]</span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">return</span> newObj</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h1><p>  <code>Date.now()</code> //获取当前毫秒数1531824326654<br>    <code>new Date().getTime()</code>//获取毫秒数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTime</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> dt=<span class="keyword">new</span> <span class="built_in">Date</span>() <span class="comment">//中国标准时间</span></span><br><span class="line">  <span class="keyword">var</span> year=dt.getFullYear() <span class="comment">//年</span></span><br><span class="line">  <span class="keyword">var</span> month=dt.getMonth()+<span class="number">1</span> <span class="comment">//月(0-11)</span></span><br><span class="line">  <span class="keyword">var</span> date=dt.getDate() <span class="comment">//日(0-31)</span></span><br><span class="line">  <span class="keyword">var</span> hour=dt.getHours() <span class="comment">//时(0-23)</span></span><br><span class="line">  <span class="keyword">var</span> minute=dt.getMinutes() <span class="comment">//分 (0-59)</span></span><br><span class="line">  <span class="keyword">var</span> second=dt.getSeconds() <span class="comment">//秒 (0-59)</span></span><br><span class="line">  <span class="keyword">return</span> year+<span class="string">&#x27;-&#x27;</span>+month+<span class="string">&#x27;-&#x27;</span>+date+<span class="string">&#x27; &#x27;</span>+hour+<span class="string">&#x27;:&#x27;</span>+minute+<span class="string">&#x27;:&#x27;</span>+second</span><br><span class="line">&#125;</span><br><span class="line">getTime() <span class="comment">//2018-6-17 18:58:22</span></span><br></pre></td></tr></table></figure><h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><h2 id="阶乘"><a href="#阶乘" class="headerlink" title="阶乘"></a>阶乘</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//书P70 可以被es6引擎优化</span></span><br><span class="line"><span class="comment">//阶乘</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">factorial</span>(<span class="params">n,p=<span class="number">1</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(n&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>*p</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> result =n*p</span><br><span class="line"></span><br><span class="line">    <span class="comment">//优化后</span></span><br><span class="line">    <span class="keyword">return</span> factorial(n-<span class="number">1</span>,result)</span><br><span class="line">  &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">factorial(<span class="number">3</span>)<span class="comment">//6</span></span><br></pre></td></tr></table></figure><p>##菲波那契</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//菲波那契 </span></span><br><span class="line"><span class="comment">//1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fibo</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> fibo(n - <span class="number">1</span>) + fibo(n - <span class="number">2</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fibo(<span class="number">3</span>) <span class="comment">//2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//最优解</span></span><br><span class="line"><span class="comment">// 菲波那契可能是最普通的解法</span></span><br><span class="line"><span class="keyword">var</span> series = <span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> sum = [<span class="number">0</span>, <span class="number">1</span>];</span><br><span class="line">  <span class="keyword">if</span>(n &lt; <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> sum[n];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> firstNum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> secondNum = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">var</span> total = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">2</span>; i&lt;= n; i++) &#123;</span><br><span class="line">    total = firstNum + secondNum;</span><br><span class="line">    firstNum = secondNum;</span><br><span class="line">    secondNum = total;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="浏览器内置对象"><a href="#浏览器内置对象" class="headerlink" title="浏览器内置对象"></a>浏览器内置对象</h1><h2 id="navigator"><a href="#navigator" class="headerlink" title="navigator"></a>navigator</h2><p>navigator.userAgent  浏览器代理器名称</p><h2 id="location"><a href="#location" class="headerlink" title="location"></a>location</h2><p>例子<br>location.href=’跳转的地址’<br><code>https://www.baidu.com/index.html?id=99&amp;a=b#mid=100</code></p><table>  <tr><td>location</td><td>值</td></tr>  <tr><td>location.protocol</td><td>https:</td></tr>  <tr><td>location.pathname</td><td>/index.html</td></tr>  <tr><td>location.search</td><td>?id=99&a=b</td></tr>  <tr><td>location.hash</td><td>#mid=100</td></tr></table><h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><p>event. stopPropagatio()是阻止冒泡事件的方法，<br>在ie浏览器上没有stopPropagatio()这个方法，<br>在ie上要用e.cancelBubble=true阻止冒泡事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stopPropagation</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e=<span class="built_in">window</span>.event||event;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>.all)&#123;</span><br><span class="line">        e.cancelBubble=<span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        e.stopPropagation();<span class="comment">//阻止冒泡</span></span><br><span class="line">        e.preventDefault()<span class="comment">// 取消默认行为</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="事件委托代理"><a href="#事件委托代理" class="headerlink" title="事件委托代理"></a>事件委托代理</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>这是a标签<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> div1=<span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>)</span></span><br><span class="line"><span class="javascript">div1.addEventListener(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">let</span> target=e.target</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span>(target.nodeName===<span class="string">&#x27;A&#x27;</span>)&#123;</span></span><br><span class="line"><span class="javascript">    alert(target.innerHTML)</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>完善封装代理</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bindEvent</span>(<span class="params">elem,type,selector,fn</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(fn==<span class="literal">null</span>)&#123; <span class="comment">//3个参数</span></span><br><span class="line">    fn=selector</span><br><span class="line">    selector=<span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  elem.addEventListener(type,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tar<span class="keyword">get</span></span><br><span class="line">    <span class="title">if</span>(<span class="params">selector</span>)&#123; <span class="comment">//四个参数(代理)</span></span><br><span class="line">      target=e.target</span><br><span class="line">      <span class="built_in">console</span>.log(target)</span><br><span class="line">      <span class="keyword">if</span> (target.matches(selector))&#123;</span><br><span class="line">        fn.call(target,e)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; <span class="comment">//没有代理</span></span><br><span class="line">      fn(e)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用代理</span></span><br><span class="line"><span class="keyword">var</span> div1=<span class="built_in">document</span>.getElementById(<span class="string">&#x27;div1&#x27;</span>)</span><br><span class="line">bindEvent(div1,<span class="string">&#x27;click&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">this</span>.innerHTML)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//不使用代理</span></span><br><span class="line"><span class="comment">// var a=document.getElementById(&#x27;a1&#x27;)</span></span><br><span class="line"><span class="comment">// bindEvent(div1,&#x27;click&#x27;,function(e)&#123;</span></span><br><span class="line"><span class="comment">//   console.log(a.innerHTML)</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br></pre></td></tr></table></figure><h1 id="ajax"><a href="#ajax" class="headerlink" title="ajax"></a>ajax</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr =<span class="keyword">new</span> XMLHttpRequest()</span><br><span class="line">xhr.open(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;/api&#x27;</span>,<span class="literal">false</span>)</span><br><span class="line">xhr.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">//这里的函数异步执行</span></span><br><span class="line">  <span class="keyword">if</span>(xhr.readyState=<span class="number">4</span>)&#123; <span class="comment">//ajax状态码</span></span><br><span class="line">    <span class="keyword">if</span>(xhr.status==<span class="number">200</span>)&#123; <span class="comment">//http请求状态码</span></span><br><span class="line">      alert(xhr.responseText)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xhr.send(<span class="literal">null</span>)</span><br></pre></td></tr></table></figure><h1 id="AMD"><a href="#AMD" class="headerlink" title="AMD"></a>AMD</h1><p>异步模块定义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.util.js</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> util=&#123;</span><br><span class="line">    <span class="attr">getFormatData</span>:<span class="function"><span class="keyword">function</span>(<span class="params">date,type</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(type===<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;2018-06-20&#x27;</span></span><br><span class="line">      &#125;<span class="keyword">if</span>(type===<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;2018年6月20日&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> util</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//2.a-util.js</span></span><br><span class="line">define([<span class="string">&#x27;./util.js&#x27;</span>],<span class="function"><span class="keyword">function</span>(<span class="params">util</span>)</span>&#123; </span><br><span class="line">  <span class="keyword">var</span> aUtil=&#123;</span><br><span class="line">    <span class="attr">aGetFormatDate</span>:<span class="function"><span class="keyword">function</span>(<span class="params">date</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> util.getFormatData(date,<span class="number">2</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> aUtil</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//3.a.js</span></span><br><span class="line">define([<span class="string">&#x27;./a-util.js&#x27;</span>],<span class="function"><span class="keyword">function</span>(<span class="params">util</span>)</span>&#123; </span><br><span class="line">  <span class="keyword">var</span> a=&#123;</span><br><span class="line">    <span class="attr">printDate</span>:<span class="function"><span class="keyword">function</span>(<span class="params">date</span>)</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(util.aGetFormatDate(date))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//4.main.js</span></span><br><span class="line"><span class="built_in">require</span>([<span class="string">&#x27;./a.js&#x27;</span>],<span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> date=<span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">  a.printDate(date) <span class="comment">//2018年6月20日</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>使用 <code>data-main</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/require.js/2.3.4/require.min.js&quot;</span> <span class="attr">data-main</span>=<span class="string">&#x27;./main.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="运动"><a href="#运动" class="headerlink" title="运动"></a>运动</h1><p>运动的tool</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">ele, attr</span>) //获取样式</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(ele.currentStyle)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span> ele.currentStyle[attr];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span> getComputedStyle(ele, <span class="literal">false</span>)[attr];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">ele, obj, fn</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">clearInterval</span>(ele.timer);</span><br><span class="line">  ele.timer=<span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bStop=<span class="literal">true</span>;   <span class="comment">//这一次运动就结束了――所有的值都到达了</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> attr <span class="keyword">in</span> obj)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//1.取当前的值</span></span><br><span class="line">      <span class="keyword">var</span> iCur=<span class="number">0</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span>(attr==<span class="string">&#x27;opacity&#x27;</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        iCur=<span class="built_in">parseInt</span>(<span class="built_in">parseFloat</span>(getStyle(ele, attr))*<span class="number">100</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        iCur=<span class="built_in">parseInt</span>(getStyle(ele, attr));</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//2.算速度</span></span><br><span class="line">      <span class="keyword">var</span> iSpeed=(obj[attr]-iCur)/<span class="number">8</span>;</span><br><span class="line">      iSpeed=iSpeed&gt;<span class="number">0</span>?<span class="built_in">Math</span>.ceil(iSpeed):<span class="built_in">Math</span>.floor(iSpeed);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//3.检测停止</span></span><br><span class="line">      <span class="keyword">if</span>(iCur!=obj[attr])</span><br><span class="line">      &#123;</span><br><span class="line">        bStop=<span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span>(attr==<span class="string">&#x27;opacity&#x27;</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        ele.style.filter=<span class="string">&#x27;alpha(opacity:&#x27;</span>+(iCur+iSpeed)+<span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">        ele.style.opacity=(iCur+iSpeed)/<span class="number">100</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        ele.style[attr]=iCur+iSpeed+<span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(bStop)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">clearInterval</span>(ele.timer);</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span>(fn)</span><br><span class="line">      &#123;</span><br><span class="line">        fn();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">30</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//例子</span></span><br><span class="line"> <span class="comment">// let div1=document.getElementById(&#x27;div1&#x27;) </span></span><br><span class="line">  <span class="comment">//   startMove(div1,&#123;height:300&#125;,function()&#123; //高度变化300px</span></span><br><span class="line">  <span class="comment">//     cosnole.log(&#x27;运动完成&#x27;)</span></span><br><span class="line">  <span class="comment">//   &#125;)</span></span><br></pre></td></tr></table></figure><h1 id="vue-中ajax"><a href="#vue-中ajax" class="headerlink" title="vue 中ajax"></a>vue 中ajax</h1><p>直接返回data数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&#x27;axios&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">url = <span class="string">&#x27;&#x27;</span>, data = &#123;&#125;, type = <span class="string">&#x27;GET&#x27;</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> promise</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (type === <span class="string">&#x27;GET&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// 准备url query参数数据</span></span><br><span class="line">      <span class="keyword">let</span> dataStr = <span class="string">&#x27;&#x27;</span> <span class="comment">//数据拼接字符串</span></span><br><span class="line">      <span class="built_in">Object</span>.keys(data).forEach(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">        dataStr += key + <span class="string">&#x27;=&#x27;</span> + data[key] + <span class="string">&#x27;&amp;&#x27;</span></span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">if</span> (dataStr !== <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">        dataStr = dataStr.substr(<span class="number">0</span>, dataStr.lastIndexOf(<span class="string">&#x27;&amp;&#x27;</span>))</span><br><span class="line">        url = url + <span class="string">&#x27;?&#x27;</span> + dataStr</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 发送get请求</span></span><br><span class="line">      promise = axios.get(url)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 发送post请求</span></span><br><span class="line">      promise = axios.post(url, data)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    promise.then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      resolve(response.data)</span><br><span class="line">    &#125;)</span><br><span class="line">      .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        reject(error)</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;去重&quot;&gt;&lt;a href=&quot;#去重&quot; class=&quot;headerlink&quot; title=&quot;去重&quot;&gt;&lt;/a&gt;去重&lt;/h1&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;</summary>
      
    
    
    
    <category term="js" scheme="https://wecy-chen.github.io/categories/js/"/>
    
    
    <category term="js" scheme="https://wecy-chen.github.io/tags/js/"/>
    
  </entry>
  
</feed>
